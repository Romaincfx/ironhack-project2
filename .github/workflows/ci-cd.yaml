name: Build, Push Docker Images and Deploy to EKS

on:
  push:
    branches: [ "main", "dev" ]
  pull_request:
    branches: [ "main", "dev" ]

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    environment: production

    steps:
    - name: Checkout Code
      uses: actions/checkout@v2

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v1

    - name: Check secrets are passed
      run: |
        echo "Username: ${{ secrets.DOCKERHUB_USERNAME }}"
        echo "Token is set: ${{ secrets.DOCKERHUB_TOKEN != '' }}"

    - name: Login to DockerHub
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}

    - name: Build and Push Vote Image
      run: |
        docker build -t ${{ secrets.DOCKERHUB_USERNAME }}/voting-app-vote:latest ./vote
        docker push ${{ secrets.DOCKERHUB_USERNAME }}/voting-app-vote:latest

    - name: Build and Push Result Image
      run: |
        docker build -t ${{ secrets.DOCKERHUB_USERNAME }}/voting-app-result:latest ./result
        docker push ${{ secrets.DOCKERHUB_USERNAME }}/voting-app-result:latest

    - name: Build and Push Worker Image
      run: |
        docker build -t ${{ secrets.DOCKERHUB_USERNAME }}/voting-app-worker:latest ./worker
        docker push ${{ secrets.DOCKERHUB_USERNAME }}/voting-app-worker:latest

  deploy:
    needs: build-and-push
    runs-on: ubuntu-latest
    environment: production

    steps:
    - name: Checkout Code
      uses: actions/checkout@v2

    - name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: eu-west-3

    - name: Update Kubeconfig
      run: eksctl utils write-kubeconfig --cluster voting-app-cluster --region eu-west-3

    - name: Apply Kubernetes Manifests
      run: kubectl apply -f K8s/
